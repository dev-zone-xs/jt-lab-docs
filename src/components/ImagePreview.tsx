import React, { useEffect } from 'react';

interface ImagePreviewProps {
  enableLogs?: boolean;
}

const ImagePreview: React.FC<ImagePreviewProps> = ({ enableLogs = false }) => {
  useEffect(() => {
    if (enableLogs) {
      console.log('üñºÔ∏è Image Preview: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º JavaScript');
    }

    // –í—Å—Ç—Ä–∞–∏–≤–∞–µ–º JavaScript –∫–æ–¥ –ø—Ä—è–º–æ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    const initImagePreview = () => {
      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
      const log = (...args: any[]) => {
        if (enableLogs) {
          console.log(...args);
        }
      };

      log('üñºÔ∏è Image Preview: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞—Ç–∞');

      // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      function createModal() {
        const modal = document.createElement('div');
        modal.id = 'image-preview-modal';
        modal.innerHTML = `
          <div class="modal-overlay">
            <div class="modal-content">
              <span class="modal-close">&times;</span>
              <img class="modal-image" src="" alt="">
              <div class="modal-caption"></div>
            </div>
          </div>
        `;
        document.body.appendChild(modal);
        return modal;
      }

      // CSS —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      function addStyles() {
        const style = document.createElement('style');
        style.textContent = `
          #image-preview-modal {
            display: none;
            position: fixed;
            z-index: 10000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.9);
            animation: fadeIn 0.3s ease;
          }

          #image-preview-modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
          }

          .modal-overlay {
            position: relative;
            max-width: 90%;
            max-height: 90%;
            display: flex;
            flex-direction: column;
            align-items: center;
          }

          .modal-content {
            position: relative;
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
            max-width: 100%;
            max-height: 100%;
            overflow: auto;
          }

          .modal-close {
            position: absolute;
            top: 10px;
            right: 15px;
            color: #aaa;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            z-index: 10001;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            line-height: 1;
          }

          .modal-close:hover,
          .modal-close:focus {
            color: #000;
            background: rgba(255, 255, 255, 1);
          }

          .modal-image {
            max-width: 100%;
            max-height: 80vh;
            height: auto;
            width: auto;
            display: block;
            margin: 0 auto;
            border-radius: 4px;
          }

          .modal-caption {
            text-align: center;
            margin-top: 10px;
            font-size: 14px;
            color: #666;
            font-style: italic;
          }

          @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
          }

          .modal-image {
            animation: zoomIn 0.3s ease;
          }

          @keyframes zoomIn {
            from { transform: scale(0.8); opacity: 0; }
            to { transform: scale(1); opacity: 1; }
          }

          @media (max-width: 768px) {
            .modal-content {
              margin: 20px;
              padding: 15px;
            }
            
            .modal-image {
              max-height: 70vh;
            }
          }
        `;
        document.head.appendChild(style);
      }

      // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      function showModal(imageSrc, imageAlt) {
        log('üñºÔ∏è Image Preview: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ', { imageSrc, imageAlt });
        
        const modal = document.getElementById('image-preview-modal');
        const modalImage = modal.querySelector('.modal-image');
        const modalCaption = modal.querySelector('.modal-caption');
        
        modalImage.src = imageSrc;
        modalImage.alt = imageAlt;
        modalCaption.textContent = imageAlt || '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
        
        modal.classList.add('show');
        document.body.style.overflow = 'hidden';
        
        log('üñºÔ∏è Image Preview: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫–∞–∑–∞–Ω–æ');
      }

      // –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      function hideModal() {
        log('üñºÔ∏è Image Preview: –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
        
        const modal = document.getElementById('image-preview-modal');
        modal.classList.remove('show');
        document.body.style.overflow = '';
        
        log('üñºÔ∏è Image Preview: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–∫—Ä—ã—Ç–æ');
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
      function isImageFile(url) {
        const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.webp', '.svg', '.bmp'];
        const lowerUrl = url.toLowerCase();
        
        log('üñºÔ∏è Image Preview: –ü—Ä–æ–≤–µ—Ä—è–µ–º URL:', url);
        
        const hasImageExtension = imageExtensions.some(ext => lowerUrl.includes(ext));
        log('üñºÔ∏è Image Preview: –ò–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', hasImageExtension);
        
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–Ω–∏–µ –Ω–∞ /, —Ç–∞–∫ –∫–∞–∫ Docusaurus –¥–æ–±–∞–≤–ª—è–µ—Ç / –∫ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        const isNotHtmlPage = !lowerUrl.includes('.html');
        log('üñºÔ∏è Image Preview: –ù–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü–∞:', isNotHtmlPage);
        
        const result = hasImageExtension && isNotHtmlPage;
        log('üñºÔ∏è Image Preview: –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
        
        return result;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
      addStyles();
      log('üñºÔ∏è Image Preview: –°—Ç–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
      
      // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      const modal = createModal();
      log('üñºÔ∏è Image Preview: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ');
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å—Å—ã–ª–∫–∞–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      document.addEventListener('click', function(e) {
        log('üñºÔ∏è Image Preview: –ö–ª–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω', e.target);
        
        const link = e.target.closest('a');
        if (!link) {
          log('üñºÔ∏è Image Preview: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞');
          return;
        }
        
        log('üñºÔ∏è Image Preview: –ù–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞:', link);
        
        const img = link.querySelector('img');
        if (!img) {
          log('üñºÔ∏è Image Preview: –í —Å—Å—ã–ª–∫–µ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
          return;
        }
        
        log('üñºÔ∏è Image Preview: –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', img);
        
        const href = link.getAttribute('href');
        log('üñºÔ∏è Image Preview: URL —Å—Å—ã–ª–∫–∏:', href);
        
        if (!href || !isImageFile(href)) {
          log('üñºÔ∏è Image Preview: –≠—Ç–æ –Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –Ω–µ—Ç href');
          return;
        }
        
        log('üñºÔ∏è Image Preview: –≠—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!');
        
        const target = link.getAttribute('target');
        log('üñºÔ∏è Image Preview: Target —Å—Å—ã–ª–∫–∏:', target);
        
        if (target === '_blank') {
          log('üñºÔ∏è Image Preview: –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
          e.preventDefault();
          
          showModal(href, img.alt);
        } else {
          log('üñºÔ∏è Image Preview: Target –Ω–µ _blank, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        }
      });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      modal.addEventListener('click', function(e) {
        if (e.target === modal || e.target.classList.contains('modal-close')) {
          hideModal();
        }
      });
      
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
          hideModal();
        }
      });

      log('üñºÔ∏è Image Preview: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    initImagePreview();

    return () => {
      if (enableLogs) {
        console.log('üñºÔ∏è Image Preview: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
      }
    };
  }, []);

  return null; // –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç –Ω–∏—á–µ–≥–æ –≤–∏–¥–∏–º–æ–≥–æ
};

export default ImagePreview;
